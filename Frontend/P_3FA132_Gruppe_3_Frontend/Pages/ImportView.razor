@page "/ImportView"
@using Microsoft.AspNetCore.Components.QuickGrid
@using P_3FA132_Gruppe_3_Frontend.Data.Models
@inherits Blazing.Mvvm.Components.MvvmOwningComponentBase<P_3FA132_Gruppe_3_Frontend.Data.ViewModels.ImportViewModel>

<PageTitle>Import</PageTitle>
<h3>ImportView</h3>

<p>Select a file you want to import...</p>
<InputFile OnChange="ViewModel.SelectFileCommand.ExecuteAsync">Upload</InputFile>

<!--

<EditForm Model="ViewModel.CustomerQuery" OnValidSubmit="ViewModel.QueryCommand.ExecuteAsync">
    <InputText placeholder="First Name" @bind-Value="ViewModel.CustomerQuery.FirstName">

    </InputText>
    <InputText placeholder="Last Name" @bind-Value="ViewModel.CustomerQuery.LastName">

    </InputText>
    <button type="submit">Search</button>
</EditForm>

@if (ViewModel.SelectedCustomer != null)
{
    <h4>Ausgewählter Customer:</h4>
    <p>Name: @ViewModel.SelectedCustomer.FirstName @ViewModel.SelectedCustomer.LastName</p>
    <p>ID: @ViewModel.SelectedCustomer.Id</p>
    <InputFile OnChange="ViewModel.SelectFileCommand.ExecuteAsync">Upload</InputFile>
}
else
{
    <h4>Suche nach einem Customer und wähle ihn aus...</h4>
}
    

@if (ViewModel.SearchButtonClicked)
{
    <QuickGrid Items="ViewModel.Customers!.AsQueryable()" Pagination="ViewModel.PaginationState" Class="quickgrid">
        <TemplateColumn Context="customer" Title="Id">
            <span>
                @customer.Id
            </span>
        </TemplateColumn>
        <TemplateColumn Context="customer" Title="First Name">
            <span>
                @customer.FirstName
            </span>
        </TemplateColumn>
        <TemplateColumn Context="customer" Title="Last Name">
            <span>
                @customer.LastName
            </span>
        </TemplateColumn>
        <TemplateColumn Context="customer" Title="Birth Date">
            <span>
                @customer.DateOfBirth
            </span>
        </TemplateColumn>
        <TemplateColumn Context="customer" Title="Gender">
            <span>
                @(customer.Gender.ToDescriptionString() + customer.Gender.ToEmoji())
            </span>
        </TemplateColumn>
        <TemplateColumn Context="customer">
            <button @onclick="() => ViewModel.SelectCustomerCommand.Execute(customer)">
                Select
            </button>
        </TemplateColumn>

    </QuickGrid>
}





-->
@if (ViewModel.IsReadingCsv)
{
    <QuickGrid Items="ViewModel.Readings!.AsQueryable()" Pagination="ViewModel.PaginationState">
        <TemplateColumn Context="reading" Title="Date of reading">
            <span>
                @reading.DateOfReading
            </span>
        </TemplateColumn>
        <TemplateColumn Context="reading" Title="Meter count">
            <span>
                @reading.MeterCount
            </span>
        </TemplateColumn>
        <TemplateColumn Context="reading" Title="Comment">
            <span>
                @reading.Comment
            </span>
        </TemplateColumn>
    </QuickGrid>
}

@if (ViewModel.IsCustomerCsv)
{
    <QuickGrid Items="ViewModel.Customers!.AsQueryable()" Pagination="ViewModel.PaginationState">
        <TemplateColumn Context="customer" Title="UUID">
            <span>
                @customer.Id
            </span>
        </TemplateColumn>
        <TemplateColumn Context="customer" Title="Gender">
            <span>
                @customer.Gender
            </span>
        </TemplateColumn>
        <TemplateColumn Context="customer" Title="First name">
            <span>
                @customer.FirstName
            </span>
        </TemplateColumn>
        <TemplateColumn Context="customer" Title="Last name">
            <span>
                @customer.LastName
            </span>
        </TemplateColumn>
        <TemplateColumn Context="customer" Title="Date of birth">
            <span>
                @customer.DateOfBirth
            </span>
        </TemplateColumn>
    </QuickGrid>
}

<button @onclick="ViewModel.UploadCommand.ExecuteAsync">Upload</button>

<div class="quickgrid-pagination">
    <Paginator State="ViewModel.PaginationState"/>
</div>


@code {


}